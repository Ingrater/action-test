name: ClangFormat

on:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Run a one-line script
        run: |
          echo GITHUB_REF = $GITHUB_REF
          echo GITHUB_HEAD_REF = $GITHUB_HEAD_REF
          echo GITHUB_BASE_REF = $GITHUB_BASE_REF
          echo GITHUB_SHA = $GITHUB_SHA
          echo GITHUB_WORKSPACE = $GITHUB_WORKSPACE

      - name: Format pwsh
        shell: pwsh
        run: |
          git fetch origin "${env:GITHUB_BASE_REF}:refs/remotes/origin/${env:GITHUB_BASE_REF}"
          git fetch origin "${env:GITHUB_HEAD_REF}:refs/remotes/origin/${env:GITHUB_HEAD_REF}"

          #git checkout "origin/${env:GITHUB_HEAD_REF}"
          
          function exec
          {
              [CmdletBinding()]
              param(
                  [Parameter(Position=0,Mandatory=1)][scriptblock]$cmd,
                  [Parameter(Position=1,Mandatory=0)][string]$errorMessage = ("Error executing command {0}" -f $cmd)
              )
              $output = & $cmd 2>&1
              if ($lastexitcode -ne 0)
              {
                  throw ("Exec: " + $errorMessage + "`n" + $output + "`nExit Code: $lastexitcode")
              }

              return $output
          }

          $baseCommit = exec({git merge-base HEAD origin/main})
          echo $baseCommit

          $diff = exec { git diff "$baseCommit..HEAD" -U0 --no-color -- "*.cpp" "*.h" "*.inl" }
          echo $diff
          